/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ListRecordsRequest,
  SaveRecordsRequest,
  TableRecords,
} from '../models/index';
import {
    ListRecordsRequestFromJSON,
    ListRecordsRequestToJSON,
    SaveRecordsRequestFromJSON,
    SaveRecordsRequestToJSON,
    TableRecordsFromJSON,
    TableRecordsToJSON,
} from '../models/index';

export interface ListRecordsOperationRequest {
    xAuthToken: string;
    projectId: string;
    tableId: string;
    offset?: number;
    limit?: number;
    listRecordsRequest?: ListRecordsRequest;
}

export interface SaveRecordsOperationRequest {
    xAuthToken: string;
    projectId: string;
    tableId: string;
    saveRecordsRequest: SaveRecordsRequest;
}

/**
 * 
 */
export class RecordApi extends runtime.BaseAPI {

    /**
     * 查询表记录
     */
    async listRecordsRaw(requestParameters: ListRecordsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TableRecords>> {
        if (requestParameters['xAuthToken'] == null) {
            throw new runtime.RequiredError(
                'xAuthToken',
                'Required parameter "xAuthToken" was null or undefined when calling listRecords().'
            );
        }

        if (requestParameters['projectId'] == null) {
            throw new runtime.RequiredError(
                'projectId',
                'Required parameter "projectId" was null or undefined when calling listRecords().'
            );
        }

        if (requestParameters['tableId'] == null) {
            throw new runtime.RequiredError(
                'tableId',
                'Required parameter "tableId" was null or undefined when calling listRecords().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['xAuthToken'] != null) {
            headerParameters['X-Auth-Token'] = String(requestParameters['xAuthToken']);
        }

        const response = await this.request({
            path: `/v5/{project_id}/tables/{table_id}/records/query`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters['projectId']))).replace(`{${"table_id"}}`, encodeURIComponent(String(requestParameters['tableId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ListRecordsRequestToJSON(requestParameters['listRecordsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TableRecordsFromJSON(jsonValue));
    }

    /**
     * 查询表记录
     */
    async listRecords(requestParameters: ListRecordsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TableRecords> {
        const response = await this.listRecordsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 保存表记录
     */
    async saveRecordsRaw(requestParameters: SaveRecordsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['xAuthToken'] == null) {
            throw new runtime.RequiredError(
                'xAuthToken',
                'Required parameter "xAuthToken" was null or undefined when calling saveRecords().'
            );
        }

        if (requestParameters['projectId'] == null) {
            throw new runtime.RequiredError(
                'projectId',
                'Required parameter "projectId" was null or undefined when calling saveRecords().'
            );
        }

        if (requestParameters['tableId'] == null) {
            throw new runtime.RequiredError(
                'tableId',
                'Required parameter "tableId" was null or undefined when calling saveRecords().'
            );
        }

        if (requestParameters['saveRecordsRequest'] == null) {
            throw new runtime.RequiredError(
                'saveRecordsRequest',
                'Required parameter "saveRecordsRequest" was null or undefined when calling saveRecords().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['xAuthToken'] != null) {
            headerParameters['X-Auth-Token'] = String(requestParameters['xAuthToken']);
        }

        const response = await this.request({
            path: `/v5/{project_id}/tables/{table_id}/records/save`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters['projectId']))).replace(`{${"table_id"}}`, encodeURIComponent(String(requestParameters['tableId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SaveRecordsRequestToJSON(requestParameters['saveRecordsRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 保存表记录
     */
    async saveRecords(requestParameters: SaveRecordsOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.saveRecordsRaw(requestParameters, initOverrides);
    }

}
