/* tslint:disable */
/* eslint-disable */
/**
 * Model API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Model,
} from '../models/index';
import {
    ModelFromJSON,
    ModelToJSON,
} from '../models/index';

export interface DeleteModelRequest {
    projectId: string;
    modelId: string;
    xAuthToken: string;
}

export interface GetModelRequest {
    xAuthToken: string;
    projectId: string;
    modelId: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * 删除模型
     */
    async deleteModelRaw(requestParameters: DeleteModelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['projectId'] == null) {
            throw new runtime.RequiredError(
                'projectId',
                'Required parameter "projectId" was null or undefined when calling deleteModel().'
            );
        }

        if (requestParameters['modelId'] == null) {
            throw new runtime.RequiredError(
                'modelId',
                'Required parameter "modelId" was null or undefined when calling deleteModel().'
            );
        }

        if (requestParameters['xAuthToken'] == null) {
            throw new runtime.RequiredError(
                'xAuthToken',
                'Required parameter "xAuthToken" was null or undefined when calling deleteModel().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['xAuthToken'] != null) {
            headerParameters['X-Auth-Token'] = String(requestParameters['xAuthToken']);
        }

        const response = await this.request({
            path: `/v5/{project_id}/models/{model_id}`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters['projectId']))).replace(`{${"model_id"}}`, encodeURIComponent(String(requestParameters['modelId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 删除模型
     */
    async deleteModel(requestParameters: DeleteModelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deleteModelRaw(requestParameters, initOverrides);
    }

    /**
     * 查询单个模型内容
     */
    async getModelRaw(requestParameters: GetModelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Model>> {
        if (requestParameters['xAuthToken'] == null) {
            throw new runtime.RequiredError(
                'xAuthToken',
                'Required parameter "xAuthToken" was null or undefined when calling getModel().'
            );
        }

        if (requestParameters['projectId'] == null) {
            throw new runtime.RequiredError(
                'projectId',
                'Required parameter "projectId" was null or undefined when calling getModel().'
            );
        }

        if (requestParameters['modelId'] == null) {
            throw new runtime.RequiredError(
                'modelId',
                'Required parameter "modelId" was null or undefined when calling getModel().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters['xAuthToken'] != null) {
            headerParameters['X-Auth-Token'] = String(requestParameters['xAuthToken']);
        }

        const response = await this.request({
            path: `/v5/{project_id}/models/{model_id}`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters['projectId']))).replace(`{${"model_id"}}`, encodeURIComponent(String(requestParameters['modelId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ModelFromJSON(jsonValue));
    }

    /**
     * 查询单个模型内容
     */
    async getModel(requestParameters: GetModelRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Model> {
        const response = await this.getModelRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
