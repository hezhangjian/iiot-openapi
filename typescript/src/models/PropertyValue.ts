/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyValue
 */
export interface PropertyValue {
    /**
     * 
     * @type {string}
     * @memberof PropertyValue
     */
    value: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyValue
     */
    type: PropertyValueTypeEnum;
}


/**
 * @export
 */
export const PropertyValueTypeEnum = {
    Bool: 'bool',
    Integer: 'integer',
    Double: 'double',
    Object: 'object',
    String: 'string',
    Time: 'time'
} as const;
export type PropertyValueTypeEnum = typeof PropertyValueTypeEnum[keyof typeof PropertyValueTypeEnum];


/**
 * Check if a given object implements the PropertyValue interface.
 */
export function instanceOfPropertyValue(value: object): value is PropertyValue {
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function PropertyValueFromJSON(json: any): PropertyValue {
    return PropertyValueFromJSONTyped(json, false);
}

export function PropertyValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyValue {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'],
        'type': json['type'],
    };
}

export function PropertyValueToJSON(json: any): PropertyValue {
    return PropertyValueToJSONTyped(json, false);
}

export function PropertyValueToJSONTyped(value?: PropertyValue | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'value': value['value'],
        'type': value['type'],
    };
}

