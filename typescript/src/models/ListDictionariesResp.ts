/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BriefDictionary } from './BriefDictionary';
import {
    BriefDictionaryFromJSON,
    BriefDictionaryFromJSONTyped,
    BriefDictionaryToJSON,
    BriefDictionaryToJSONTyped,
} from './BriefDictionary';

/**
 * 
 * @export
 * @interface ListDictionariesResp
 */
export interface ListDictionariesResp {
    /**
     * 
     * @type {Array<BriefDictionary>}
     * @memberof ListDictionariesResp
     */
    dictionaries?: Array<BriefDictionary>;
    /**
     * 
     * @type {number}
     * @memberof ListDictionariesResp
     */
    count?: number;
}

/**
 * Check if a given object implements the ListDictionariesResp interface.
 */
export function instanceOfListDictionariesResp(value: object): value is ListDictionariesResp {
    return true;
}

export function ListDictionariesRespFromJSON(json: any): ListDictionariesResp {
    return ListDictionariesRespFromJSONTyped(json, false);
}

export function ListDictionariesRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListDictionariesResp {
    if (json == null) {
        return json;
    }
    return {
        
        'dictionaries': json['dictionaries'] == null ? undefined : ((json['dictionaries'] as Array<any>).map(BriefDictionaryFromJSON)),
        'count': json['count'] == null ? undefined : json['count'],
    };
}

export function ListDictionariesRespToJSON(json: any): ListDictionariesResp {
    return ListDictionariesRespToJSONTyped(json, false);
}

export function ListDictionariesRespToJSONTyped(value?: ListDictionariesResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dictionaries': value['dictionaries'] == null ? undefined : ((value['dictionaries'] as Array<any>).map(BriefDictionaryToJSON)),
        'count': value['count'],
    };
}

