/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceData } from './ServiceData';
import {
    ServiceDataFromJSON,
    ServiceDataFromJSONTyped,
    ServiceDataToJSON,
    ServiceDataToJSONTyped,
} from './ServiceData';

/**
 * 
 * @export
 * @interface ReportDevice
 */
export interface ReportDevice {
    /**
     * 
     * @type {string}
     * @memberof ReportDevice
     */
    deviceId: string;
    /**
     * 
     * @type {Array<ServiceData>}
     * @memberof ReportDevice
     */
    services: Array<ServiceData>;
}

/**
 * Check if a given object implements the ReportDevice interface.
 */
export function instanceOfReportDevice(value: object): value is ReportDevice {
    if (!('deviceId' in value) || value['deviceId'] === undefined) return false;
    if (!('services' in value) || value['services'] === undefined) return false;
    return true;
}

export function ReportDeviceFromJSON(json: any): ReportDevice {
    return ReportDeviceFromJSONTyped(json, false);
}

export function ReportDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDevice {
    if (json == null) {
        return json;
    }
    return {
        
        'deviceId': json['device_id'],
        'services': ((json['services'] as Array<any>).map(ServiceDataFromJSON)),
    };
}

export function ReportDeviceToJSON(json: any): ReportDevice {
    return ReportDeviceToJSONTyped(json, false);
}

export function ReportDeviceToJSONTyped(value?: ReportDevice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'device_id': value['deviceId'],
        'services': ((value['services'] as Array<any>).map(ServiceDataToJSON)),
    };
}

