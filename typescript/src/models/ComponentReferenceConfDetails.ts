/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReferenceConfDetails } from './ReferenceConfDetails';
import {
    ReferenceConfDetailsFromJSON,
    ReferenceConfDetailsFromJSONTyped,
    ReferenceConfDetailsToJSON,
    ReferenceConfDetailsToJSONTyped,
} from './ReferenceConfDetails';

/**
 * 
 * @export
 * @interface ComponentReferenceConfDetails
 */
export interface ComponentReferenceConfDetails {
    /**
     * 
     * @type {{ [key: string]: ReferenceConfDetails; }}
     * @memberof ComponentReferenceConfDetails
     */
    properties?: { [key: string]: ReferenceConfDetails; };
    /**
     * 
     * @type {ComponentReferenceConfDetails}
     * @memberof ComponentReferenceConfDetails
     */
    components?: ComponentReferenceConfDetails;
}

/**
 * Check if a given object implements the ComponentReferenceConfDetails interface.
 */
export function instanceOfComponentReferenceConfDetails(value: object): value is ComponentReferenceConfDetails {
    return true;
}

export function ComponentReferenceConfDetailsFromJSON(json: any): ComponentReferenceConfDetails {
    return ComponentReferenceConfDetailsFromJSONTyped(json, false);
}

export function ComponentReferenceConfDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentReferenceConfDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'properties': json['properties'] == null ? undefined : (mapValues(json['properties'], ReferenceConfDetailsFromJSON)),
        'components': json['components'] == null ? undefined : json['components'],
    };
}

export function ComponentReferenceConfDetailsToJSON(json: any): ComponentReferenceConfDetails {
    return ComponentReferenceConfDetailsToJSONTyped(json, false);
}

export function ComponentReferenceConfDetailsToJSONTyped(value?: ComponentReferenceConfDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'properties': value['properties'] == null ? undefined : (mapValues(value['properties'], ReferenceConfDetailsToJSON)),
        'components': value['components'],
    };
}

