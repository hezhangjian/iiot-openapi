/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyRef } from './PropertyRef';
import {
    PropertyRefFromJSON,
    PropertyRefFromJSONTyped,
    PropertyRefToJSON,
    PropertyRefToJSONTyped,
} from './PropertyRef';

/**
 * 
 * @export
 * @interface ReferenceConfDetails
 */
export interface ReferenceConfDetails {
    /**
     * 
     * @type {{ [key: string]: PropertyRef; }}
     * @memberof ReferenceConfDetails
     */
    propertyRef?: { [key: string]: PropertyRef; };
    /**
     * 
     * @type {object}
     * @memberof ReferenceConfDetails
     */
    value?: object;
    /**
     * 
     * @type {string}
     * @memberof ReferenceConfDetails
     */
    updateTime?: string;
}

/**
 * Check if a given object implements the ReferenceConfDetails interface.
 */
export function instanceOfReferenceConfDetails(value: object): value is ReferenceConfDetails {
    return true;
}

export function ReferenceConfDetailsFromJSON(json: any): ReferenceConfDetails {
    return ReferenceConfDetailsFromJSONTyped(json, false);
}

export function ReferenceConfDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceConfDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'propertyRef': json['property_ref'] == null ? undefined : (mapValues(json['property_ref'], PropertyRefFromJSON)),
        'value': json['value'] == null ? undefined : json['value'],
        'updateTime': json['update_time'] == null ? undefined : json['update_time'],
    };
}

export function ReferenceConfDetailsToJSON(json: any): ReferenceConfDetails {
    return ReferenceConfDetailsToJSONTyped(json, false);
}

export function ReferenceConfDetailsToJSONTyped(value?: ReferenceConfDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'property_ref': value['propertyRef'] == null ? undefined : (mapValues(value['propertyRef'], PropertyRefToJSON)),
        'value': value['value'],
        'update_time': value['updateTime'],
    };
}

