/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModifyCatalogNode } from './ModifyCatalogNode';
import {
    ModifyCatalogNodeFromJSON,
    ModifyCatalogNodeFromJSONTyped,
    ModifyCatalogNodeToJSON,
    ModifyCatalogNodeToJSONTyped,
} from './ModifyCatalogNode';

/**
 * 
 * @export
 * @interface ModifyViewNodesReq
 */
export interface ModifyViewNodesReq {
    /**
     * 
     * @type {Array<ModifyCatalogNode>}
     * @memberof ModifyViewNodesReq
     */
    catalogNodes: Array<ModifyCatalogNode>;
}

/**
 * Check if a given object implements the ModifyViewNodesReq interface.
 */
export function instanceOfModifyViewNodesReq(value: object): value is ModifyViewNodesReq {
    if (!('catalogNodes' in value) || value['catalogNodes'] === undefined) return false;
    return true;
}

export function ModifyViewNodesReqFromJSON(json: any): ModifyViewNodesReq {
    return ModifyViewNodesReqFromJSONTyped(json, false);
}

export function ModifyViewNodesReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModifyViewNodesReq {
    if (json == null) {
        return json;
    }
    return {
        
        'catalogNodes': ((json['catalog_nodes'] as Array<any>).map(ModifyCatalogNodeFromJSON)),
    };
}

export function ModifyViewNodesReqToJSON(json: any): ModifyViewNodesReq {
    return ModifyViewNodesReqToJSONTyped(json, false);
}

export function ModifyViewNodesReqToJSONTyped(value?: ModifyViewNodesReq | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'catalog_nodes': ((value['catalogNodes'] as Array<any>).map(ModifyCatalogNodeToJSON)),
    };
}

