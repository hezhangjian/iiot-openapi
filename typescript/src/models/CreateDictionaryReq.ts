/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DicItem } from './DicItem';
import {
    DicItemFromJSON,
    DicItemFromJSONTyped,
    DicItemToJSON,
    DicItemToJSONTyped,
} from './DicItem';

/**
 * 
 * @export
 * @interface CreateDictionaryReq
 */
export interface CreateDictionaryReq {
    /**
     * 
     * @type {string}
     * @memberof CreateDictionaryReq
     */
    dicId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDictionaryReq
     */
    dicName: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDictionaryReq
     */
    dataType: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDictionaryReq
     */
    catalogId: string;
    /**
     * 
     * @type {Array<DicItem>}
     * @memberof CreateDictionaryReq
     */
    values: Array<DicItem>;
}

/**
 * Check if a given object implements the CreateDictionaryReq interface.
 */
export function instanceOfCreateDictionaryReq(value: object): value is CreateDictionaryReq {
    if (!('dicId' in value) || value['dicId'] === undefined) return false;
    if (!('dicName' in value) || value['dicName'] === undefined) return false;
    if (!('dataType' in value) || value['dataType'] === undefined) return false;
    if (!('catalogId' in value) || value['catalogId'] === undefined) return false;
    if (!('values' in value) || value['values'] === undefined) return false;
    return true;
}

export function CreateDictionaryReqFromJSON(json: any): CreateDictionaryReq {
    return CreateDictionaryReqFromJSONTyped(json, false);
}

export function CreateDictionaryReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDictionaryReq {
    if (json == null) {
        return json;
    }
    return {
        
        'dicId': json['dic_id'],
        'dicName': json['dic_name'],
        'dataType': json['data_type'],
        'catalogId': json['catalog_id'],
        'values': ((json['values'] as Array<any>).map(DicItemFromJSON)),
    };
}

export function CreateDictionaryReqToJSON(json: any): CreateDictionaryReq {
    return CreateDictionaryReqToJSONTyped(json, false);
}

export function CreateDictionaryReqToJSONTyped(value?: CreateDictionaryReq | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dic_id': value['dicId'],
        'dic_name': value['dicName'],
        'data_type': value['dataType'],
        'catalog_id': value['catalogId'],
        'values': ((value['values'] as Array<any>).map(DicItemToJSON)),
    };
}

