/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyValues } from './PropertyValues';
import {
    PropertyValuesFromJSON,
    PropertyValuesFromJSONTyped,
    PropertyValuesToJSON,
    PropertyValuesToJSONTyped,
} from './PropertyValues';

/**
 * 
 * @export
 * @interface DataList
 */
export interface DataList {
    /**
     * 
     * @type {Array<number>}
     * @memberof DataList
     */
    timestamps?: Array<number>;
    /**
     * 
     * @type {Array<PropertyValues>}
     * @memberof DataList
     */
    propertyValues?: Array<PropertyValues>;
}

/**
 * Check if a given object implements the DataList interface.
 */
export function instanceOfDataList(value: object): value is DataList {
    return true;
}

export function DataListFromJSON(json: any): DataList {
    return DataListFromJSONTyped(json, false);
}

export function DataListFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataList {
    if (json == null) {
        return json;
    }
    return {
        
        'timestamps': json['timestamps'] == null ? undefined : json['timestamps'],
        'propertyValues': json['property_values'] == null ? undefined : ((json['property_values'] as Array<any>).map(PropertyValuesFromJSON)),
    };
}

export function DataListToJSON(json: any): DataList {
    return DataListToJSONTyped(json, false);
}

export function DataListToJSONTyped(value?: DataList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timestamps': value['timestamps'],
        'property_values': value['propertyValues'] == null ? undefined : ((value['propertyValues'] as Array<any>).map(PropertyValuesToJSON)),
    };
}

