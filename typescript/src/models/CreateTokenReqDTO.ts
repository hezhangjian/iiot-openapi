/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Project } from './Project';
import {
    ProjectFromJSON,
    ProjectFromJSONTyped,
    ProjectToJSON,
    ProjectToJSONTyped,
} from './Project';

/**
 * 
 * @export
 * @interface CreateTokenReqDTO
 */
export interface CreateTokenReqDTO {
    /**
     * 
     * @type {string}
     * @memberof CreateTokenReqDTO
     */
    clientId: string;
    /**
     * 
     * @type {string}
     * @memberof CreateTokenReqDTO
     */
    secretId: string;
    /**
     * 
     * @type {Project}
     * @memberof CreateTokenReqDTO
     */
    project?: Project;
}

/**
 * Check if a given object implements the CreateTokenReqDTO interface.
 */
export function instanceOfCreateTokenReqDTO(value: object): value is CreateTokenReqDTO {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('secretId' in value) || value['secretId'] === undefined) return false;
    return true;
}

export function CreateTokenReqDTOFromJSON(json: any): CreateTokenReqDTO {
    return CreateTokenReqDTOFromJSONTyped(json, false);
}

export function CreateTokenReqDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateTokenReqDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'clientId': json['client_id'],
        'secretId': json['secret_id'],
        'project': json['project'] == null ? undefined : ProjectFromJSON(json['project']),
    };
}

export function CreateTokenReqDTOToJSON(json: any): CreateTokenReqDTO {
    return CreateTokenReqDTOToJSONTyped(json, false);
}

export function CreateTokenReqDTOToJSONTyped(value?: CreateTokenReqDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_id': value['clientId'],
        'secret_id': value['secretId'],
        'project': ProjectToJSON(value['project']),
    };
}

