/* tslint:disable */
/* eslint-disable */
/**
 * Model API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyDto } from './PropertyDto';
import {
    PropertyDtoFromJSON,
    PropertyDtoFromJSONTyped,
    PropertyDtoToJSON,
    PropertyDtoToJSONTyped,
} from './PropertyDto';

/**
 * 
 * @export
 * @interface ComponentDto
 */
export interface ComponentDto {
    /**
     * 
     * @type {string}
     * @memberof ComponentDto
     */
    componentId: string;
    /**
     * 
     * @type {string}
     * @memberof ComponentDto
     */
    componentName: string;
    /**
     * 
     * @type {string}
     * @memberof ComponentDto
     */
    description?: string;
    /**
     * 
     * @type {Array<PropertyDto>}
     * @memberof ComponentDto
     */
    properties?: Array<PropertyDto>;
    /**
     * 
     * @type {Array<ComponentDto>}
     * @memberof ComponentDto
     */
    components?: Array<ComponentDto>;
}

/**
 * Check if a given object implements the ComponentDto interface.
 */
export function instanceOfComponentDto(value: object): value is ComponentDto {
    if (!('componentId' in value) || value['componentId'] === undefined) return false;
    if (!('componentName' in value) || value['componentName'] === undefined) return false;
    return true;
}

export function ComponentDtoFromJSON(json: any): ComponentDto {
    return ComponentDtoFromJSONTyped(json, false);
}

export function ComponentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'componentId': json['component_id'],
        'componentName': json['component_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'properties': json['properties'] == null ? undefined : ((json['properties'] as Array<any>).map(PropertyDtoFromJSON)),
        'components': json['components'] == null ? undefined : ((json['components'] as Array<any>).map(ComponentDtoFromJSON)),
    };
}

export function ComponentDtoToJSON(json: any): ComponentDto {
    return ComponentDtoToJSONTyped(json, false);
}

export function ComponentDtoToJSONTyped(value?: ComponentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'component_id': value['componentId'],
        'component_name': value['componentName'],
        'description': value['description'],
        'properties': value['properties'] == null ? undefined : ((value['properties'] as Array<any>).map(PropertyDtoToJSON)),
        'components': value['components'] == null ? undefined : ((value['components'] as Array<any>).map(ComponentDtoToJSON)),
    };
}

