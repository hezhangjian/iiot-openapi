/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ViewLevel } from './ViewLevel';
import {
    ViewLevelFromJSON,
    ViewLevelFromJSONTyped,
    ViewLevelToJSON,
    ViewLevelToJSONTyped,
} from './ViewLevel';

/**
 * 
 * @export
 * @interface View
 */
export interface View {
    /**
     * 
     * @type {string}
     * @memberof View
     */
    viewId?: string;
    /**
     * 
     * @type {string}
     * @memberof View
     */
    viewName?: string;
    /**
     * 
     * @type {string}
     * @memberof View
     */
    description?: string;
    /**
     * 
     * @type {Array<ViewLevel>}
     * @memberof View
     */
    levels?: Array<ViewLevel>;
    /**
     * 
     * @type {string}
     * @memberof View
     */
    createTime?: string;
    /**
     * 
     * @type {string}
     * @memberof View
     */
    updateTime?: string;
}

/**
 * Check if a given object implements the View interface.
 */
export function instanceOfView(value: object): value is View {
    return true;
}

export function ViewFromJSON(json: any): View {
    return ViewFromJSONTyped(json, false);
}

export function ViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): View {
    if (json == null) {
        return json;
    }
    return {
        
        'viewId': json['view_id'] == null ? undefined : json['view_id'],
        'viewName': json['view_name'] == null ? undefined : json['view_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'levels': json['levels'] == null ? undefined : ((json['levels'] as Array<any>).map(ViewLevelFromJSON)),
        'createTime': json['create_time'] == null ? undefined : json['create_time'],
        'updateTime': json['update_time'] == null ? undefined : json['update_time'],
    };
}

export function ViewToJSON(json: any): View {
    return ViewToJSONTyped(json, false);
}

export function ViewToJSONTyped(value?: View | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'view_id': value['viewId'],
        'view_name': value['viewName'],
        'description': value['description'],
        'levels': value['levels'] == null ? undefined : ((value['levels'] as Array<any>).map(ViewLevelToJSON)),
        'create_time': value['createTime'],
        'update_time': value['updateTime'],
    };
}

