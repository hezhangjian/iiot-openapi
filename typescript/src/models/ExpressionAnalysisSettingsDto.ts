/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExpressionSettings } from './ExpressionSettings';
import {
    ExpressionSettingsFromJSON,
    ExpressionSettingsFromJSONTyped,
    ExpressionSettingsToJSON,
    ExpressionSettingsToJSONTyped,
} from './ExpressionSettings';

/**
 * 
 * @export
 * @interface ExpressionAnalysisSettingsDto
 */
export interface ExpressionAnalysisSettingsDto {
    /**
     * 
     * @type {ExpressionSettings}
     * @memberof ExpressionAnalysisSettingsDto
     */
    expressionSettings?: ExpressionSettings;
}

/**
 * Check if a given object implements the ExpressionAnalysisSettingsDto interface.
 */
export function instanceOfExpressionAnalysisSettingsDto(value: object): value is ExpressionAnalysisSettingsDto {
    return true;
}

export function ExpressionAnalysisSettingsDtoFromJSON(json: any): ExpressionAnalysisSettingsDto {
    return ExpressionAnalysisSettingsDtoFromJSONTyped(json, false);
}

export function ExpressionAnalysisSettingsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExpressionAnalysisSettingsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'expressionSettings': json['expression_settings'] == null ? undefined : ExpressionSettingsFromJSON(json['expression_settings']),
    };
}

export function ExpressionAnalysisSettingsDtoToJSON(json: any): ExpressionAnalysisSettingsDto {
    return ExpressionAnalysisSettingsDtoToJSONTyped(json, false);
}

export function ExpressionAnalysisSettingsDtoToJSONTyped(value?: ExpressionAnalysisSettingsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'expression_settings': ExpressionSettingsToJSON(value['expressionSettings']),
    };
}

