/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataSchema } from './DataSchema';
import {
    DataSchemaFromJSON,
    DataSchemaFromJSONTyped,
    DataSchemaToJSON,
    DataSchemaToJSONTyped,
} from './DataSchema';
import type { TableRef } from './TableRef';
import {
    TableRefFromJSON,
    TableRefFromJSONTyped,
    TableRefToJSON,
    TableRefToJSONTyped,
} from './TableRef';

/**
 * 
 * @export
 * @interface PropertyDto
 */
export interface PropertyDto {
    /**
     * 
     * @type {string}
     * @memberof PropertyDto
     */
    propertyId: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyDto
     */
    propertyName: string;
    /**
     * 
     * @type {DataSchema}
     * @memberof PropertyDto
     */
    dataSchema: DataSchema;
    /**
     * 
     * @type {boolean}
     * @memberof PropertyDto
     */
    writable?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof PropertyDto
     */
    categories?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PropertyDto
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyDto
     */
    unit?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertyDto
     */
    refType?: PropertyDtoRefTypeEnum;
    /**
     * 
     * @type {TableRef}
     * @memberof PropertyDto
     */
    tableRef?: TableRef;
}


/**
 * @export
 */
export const PropertyDtoRefTypeEnum = {
    Table: 'table',
    Point: 'point',
    Property: 'property'
} as const;
export type PropertyDtoRefTypeEnum = typeof PropertyDtoRefTypeEnum[keyof typeof PropertyDtoRefTypeEnum];


/**
 * Check if a given object implements the PropertyDto interface.
 */
export function instanceOfPropertyDto(value: object): value is PropertyDto {
    if (!('propertyId' in value) || value['propertyId'] === undefined) return false;
    if (!('propertyName' in value) || value['propertyName'] === undefined) return false;
    if (!('dataSchema' in value) || value['dataSchema'] === undefined) return false;
    return true;
}

export function PropertyDtoFromJSON(json: any): PropertyDto {
    return PropertyDtoFromJSONTyped(json, false);
}

export function PropertyDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyDto {
    if (json == null) {
        return json;
    }
    return {
        
        'propertyId': json['property_id'],
        'propertyName': json['property_name'],
        'dataSchema': DataSchemaFromJSON(json['data_schema']),
        'writable': json['writable'] == null ? undefined : json['writable'],
        'categories': json['categories'] == null ? undefined : json['categories'],
        'description': json['description'] == null ? undefined : json['description'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'refType': json['ref_type'] == null ? undefined : json['ref_type'],
        'tableRef': json['table_ref'] == null ? undefined : TableRefFromJSON(json['table_ref']),
    };
}

export function PropertyDtoToJSON(json: any): PropertyDto {
    return PropertyDtoToJSONTyped(json, false);
}

export function PropertyDtoToJSONTyped(value?: PropertyDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'property_id': value['propertyId'],
        'property_name': value['propertyName'],
        'data_schema': DataSchemaToJSON(value['dataSchema']),
        'writable': value['writable'],
        'categories': value['categories'],
        'description': value['description'],
        'unit': value['unit'],
        'ref_type': value['refType'],
        'table_ref': TableRefToJSON(value['tableRef']),
    };
}

