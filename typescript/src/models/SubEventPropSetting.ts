/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventGenExpression } from './EventGenExpression';
import {
    EventGenExpressionFromJSON,
    EventGenExpressionFromJSONTyped,
    EventGenExpressionToJSON,
    EventGenExpressionToJSONTyped,
} from './EventGenExpression';
import type { EventTrigger } from './EventTrigger';
import {
    EventTriggerFromJSON,
    EventTriggerFromJSONTyped,
    EventTriggerToJSON,
    EventTriggerToJSONTyped,
} from './EventTrigger';

/**
 * 
 * @export
 * @interface SubEventPropSetting
 */
export interface SubEventPropSetting {
    /**
     * 
     * @type {string}
     * @memberof SubEventPropSetting
     */
    name: string;
    /**
     * 
     * @type {EventTrigger}
     * @memberof SubEventPropSetting
     */
    startTrigger: EventTrigger;
    /**
     * 
     * @type {EventTrigger}
     * @memberof SubEventPropSetting
     */
    endTrigger?: EventTrigger;
    /**
     * 
     * @type {Array<EventGenExpression>}
     * @memberof SubEventPropSetting
     */
    expressions?: Array<EventGenExpression>;
}

/**
 * Check if a given object implements the SubEventPropSetting interface.
 */
export function instanceOfSubEventPropSetting(value: object): value is SubEventPropSetting {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('startTrigger' in value) || value['startTrigger'] === undefined) return false;
    return true;
}

export function SubEventPropSettingFromJSON(json: any): SubEventPropSetting {
    return SubEventPropSettingFromJSONTyped(json, false);
}

export function SubEventPropSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubEventPropSetting {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'startTrigger': EventTriggerFromJSON(json['start_trigger']),
        'endTrigger': json['end_trigger'] == null ? undefined : EventTriggerFromJSON(json['end_trigger']),
        'expressions': json['expressions'] == null ? undefined : ((json['expressions'] as Array<any>).map(EventGenExpressionFromJSON)),
    };
}

export function SubEventPropSettingToJSON(json: any): SubEventPropSetting {
    return SubEventPropSettingToJSONTyped(json, false);
}

export function SubEventPropSettingToJSONTyped(value?: SubEventPropSetting | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'start_trigger': EventTriggerToJSON(value['startTrigger']),
        'end_trigger': EventTriggerToJSON(value['endTrigger']),
        'expressions': value['expressions'] == null ? undefined : ((value['expressions'] as Array<any>).map(EventGenExpressionToJSON)),
    };
}

