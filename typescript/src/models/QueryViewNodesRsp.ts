/* tslint:disable */
/* eslint-disable */
/**
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EnrichedCatalogNode } from './EnrichedCatalogNode';
import {
    EnrichedCatalogNodeFromJSON,
    EnrichedCatalogNodeFromJSONTyped,
    EnrichedCatalogNodeToJSON,
    EnrichedCatalogNodeToJSONTyped,
} from './EnrichedCatalogNode';
import type { EnrichedThingNode } from './EnrichedThingNode';
import {
    EnrichedThingNodeFromJSON,
    EnrichedThingNodeFromJSONTyped,
    EnrichedThingNodeToJSON,
    EnrichedThingNodeToJSONTyped,
} from './EnrichedThingNode';

/**
 * 
 * @export
 * @interface QueryViewNodesRsp
 */
export interface QueryViewNodesRsp {
    /**
     * 
     * @type {string}
     * @memberof QueryViewNodesRsp
     */
    levelId?: string;
    /**
     * 
     * @type {string}
     * @memberof QueryViewNodesRsp
     */
    nodeId?: string;
    /**
     * 
     * @type {string}
     * @memberof QueryViewNodesRsp
     */
    nodeName?: string;
    /**
     * 
     * @type {number}
     * @memberof QueryViewNodesRsp
     */
    displayOrder?: number;
    /**
     * 
     * @type {string}
     * @memberof QueryViewNodesRsp
     */
    createTime?: string;
    /**
     * 
     * @type {string}
     * @memberof QueryViewNodesRsp
     */
    updateTime?: string;
    /**
     * 
     * @type {Array<EnrichedCatalogNode>}
     * @memberof QueryViewNodesRsp
     */
    catalogNodes?: Array<EnrichedCatalogNode>;
    /**
     * 
     * @type {Array<EnrichedThingNode>}
     * @memberof QueryViewNodesRsp
     */
    thingNodes?: Array<EnrichedThingNode>;
}

/**
 * Check if a given object implements the QueryViewNodesRsp interface.
 */
export function instanceOfQueryViewNodesRsp(value: object): value is QueryViewNodesRsp {
    return true;
}

export function QueryViewNodesRspFromJSON(json: any): QueryViewNodesRsp {
    return QueryViewNodesRspFromJSONTyped(json, false);
}

export function QueryViewNodesRspFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryViewNodesRsp {
    if (json == null) {
        return json;
    }
    return {
        
        'levelId': json['level_id'] == null ? undefined : json['level_id'],
        'nodeId': json['node_id'] == null ? undefined : json['node_id'],
        'nodeName': json['node_name'] == null ? undefined : json['node_name'],
        'displayOrder': json['display_order'] == null ? undefined : json['display_order'],
        'createTime': json['create_time'] == null ? undefined : json['create_time'],
        'updateTime': json['update_time'] == null ? undefined : json['update_time'],
        'catalogNodes': json['catalog_nodes'] == null ? undefined : ((json['catalog_nodes'] as Array<any>).map(EnrichedCatalogNodeFromJSON)),
        'thingNodes': json['thing_nodes'] == null ? undefined : ((json['thing_nodes'] as Array<any>).map(EnrichedThingNodeFromJSON)),
    };
}

export function QueryViewNodesRspToJSON(json: any): QueryViewNodesRsp {
    return QueryViewNodesRspToJSONTyped(json, false);
}

export function QueryViewNodesRspToJSONTyped(value?: QueryViewNodesRsp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'level_id': value['levelId'],
        'node_id': value['nodeId'],
        'node_name': value['nodeName'],
        'display_order': value['displayOrder'],
        'create_time': value['createTime'],
        'update_time': value['updateTime'],
        'catalog_nodes': value['catalogNodes'] == null ? undefined : ((value['catalogNodes'] as Array<any>).map(EnrichedCatalogNodeToJSON)),
        'thing_nodes': value['thingNodes'] == null ? undefined : ((value['thingNodes'] as Array<any>).map(EnrichedThingNodeToJSON)),
    };
}

