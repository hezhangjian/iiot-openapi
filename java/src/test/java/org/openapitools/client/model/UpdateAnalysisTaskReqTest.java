/*
 * IIoT OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CleanSettings;
import org.openapitools.client.model.ComplexSetting;
import org.openapitools.client.model.EventGenSetting;
import org.openapitools.client.model.Expression;
import org.openapitools.client.model.ExpressionSettings;
import org.openapitools.client.model.TagMatcher;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UpdateAnalysisTaskReq
 */
public class UpdateAnalysisTaskReqTest {
    private final UpdateAnalysisTaskReq model = new UpdateAnalysisTaskReq();

    /**
     * Model tests for UpdateAnalysisTaskReq
     */
    @Test
    public void testUpdateAnalysisTaskReq() {
        // TODO: test UpdateAnalysisTaskReq
    }

    /**
     * Test the property 'cleanSettings'
     */
    @Test
    public void cleanSettingsTest() {
        // TODO: test cleanSettings
    }

    /**
     * Test the property 'eventClass'
     */
    @Test
    public void eventClassTest() {
        // TODO: test eventClass
    }

    /**
     * Test the property 'eventGenSettings'
     */
    @Test
    public void eventGenSettingsTest() {
        // TODO: test eventGenSettings
    }

    /**
     * Test the property 'complexSettings'
     */
    @Test
    public void complexSettingsTest() {
        // TODO: test complexSettings
    }

    /**
     * Test the property 'expressionSettings'
     */
    @Test
    public void expressionSettingsTest() {
        // TODO: test expressionSettings
    }

    /**
     * Test the property 'taskName'
     */
    @Test
    public void taskNameTest() {
        // TODO: test taskName
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'period'
     */
    @Test
    public void periodTest() {
        // TODO: test period
    }

    /**
     * Test the property 'tagMatchers'
     */
    @Test
    public void tagMatchersTest() {
        // TODO: test tagMatchers
    }

    /**
     * Test the property 'condition'
     */
    @Test
    public void conditionTest() {
        // TODO: test condition
    }

    /**
     * Test the property 'expressions'
     */
    @Test
    public void expressionsTest() {
        // TODO: test expressions
    }

}
