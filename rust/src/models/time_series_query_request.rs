/*
 * IIoT OpenAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeSeriesQueryRequest {
    #[serde(rename = "property_paths")]
    pub property_paths: Vec<String>,
    #[serde(rename = "time_span")]
    pub time_span: Box<models::TimeSpan>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "marker", skip_serializing_if = "Option::is_none")]
    pub marker: Option<String>,
}

impl TimeSeriesQueryRequest {
    pub fn new(property_paths: Vec<String>, time_span: models::TimeSpan) -> TimeSeriesQueryRequest {
        TimeSeriesQueryRequest {
            property_paths,
            time_span: Box::new(time_span),
            limit: None,
            marker: None,
        }
    }
}

