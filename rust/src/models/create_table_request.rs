/*
 * IIoT OpenAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateTableRequest {
    #[serde(rename = "table_id")]
    pub table_id: String,
    #[serde(rename = "table_name")]
    pub table_name: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "catalog_id", skip_serializing_if = "Option::is_none")]
    pub catalog_id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "table_schema")]
    pub table_schema: Box<models::TableSchema>,
    #[serde(rename = "aging_settings", skip_serializing_if = "Option::is_none")]
    pub aging_settings: Option<Box<models::AgingSettings>>,
}

impl CreateTableRequest {
    pub fn new(table_id: String, table_name: String, r#type: String, table_schema: models::TableSchema) -> CreateTableRequest {
        CreateTableRequest {
            table_id,
            table_name,
            r#type,
            catalog_id: None,
            description: None,
            table_schema: Box::new(table_schema),
            aging_settings: None,
        }
    }
}

