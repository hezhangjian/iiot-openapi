/*
 * IIoT OpenAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Thing {
    #[serde(rename = "thing_id")]
    pub thing_id: String,
    #[serde(rename = "thing_name")]
    pub thing_name: String,
    #[serde(rename = "model_id")]
    pub model_id: String,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, models::ReferenceConfDto>>,
    #[serde(rename = "components", skip_serializing_if = "Option::is_none")]
    pub components: Option<std::collections::HashMap<String, models::ComponentReferenceConfDto>>,
    #[serde(rename = "created_time", skip_serializing_if = "Option::is_none")]
    pub created_time: Option<String>,
    #[serde(rename = "updated_time", skip_serializing_if = "Option::is_none")]
    pub updated_time: Option<String>,
}

impl Thing {
    pub fn new(thing_id: String, thing_name: String, model_id: String) -> Thing {
        Thing {
            thing_id,
            thing_name,
            model_id,
            tags: None,
            description: None,
            properties: None,
            components: None,
            created_time: None,
            updated_time: None,
        }
    }
}

