/*
 * IIoT OpenAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateAnalysisTaskReq {
    #[serde(rename = "clean_settings", skip_serializing_if = "Option::is_none")]
    pub clean_settings: Option<Box<models::CleanSettings>>,
    #[serde(rename = "event_class", skip_serializing_if = "Option::is_none")]
    pub event_class: Option<String>,
    #[serde(rename = "event_gen_settings", skip_serializing_if = "Option::is_none")]
    pub event_gen_settings: Option<Box<models::EventGenSetting>>,
    #[serde(rename = "complex_settings", skip_serializing_if = "Option::is_none")]
    pub complex_settings: Option<Box<models::ComplexSetting>>,
    #[serde(rename = "expression_settings", skip_serializing_if = "Option::is_none")]
    pub expression_settings: Option<Box<models::ExpressionSettings>>,
    #[serde(rename = "task_name")]
    pub task_name: String,
    #[serde(rename = "enabled")]
    pub enabled: bool,
    #[serde(rename = "calc_type")]
    pub calc_type: String,
    #[serde(rename = "schedule_type")]
    pub schedule_type: String,
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<String>,
    #[serde(rename = "tag_matchers", skip_serializing_if = "Option::is_none")]
    pub tag_matchers: Option<Vec<models::TagMatcher>>,
}

impl CreateAnalysisTaskReq {
    pub fn new(task_name: String, enabled: bool, calc_type: String, schedule_type: String) -> CreateAnalysisTaskReq {
        CreateAnalysisTaskReq {
            clean_settings: None,
            event_class: None,
            event_gen_settings: None,
            complex_settings: None,
            expression_settings: None,
            task_name,
            enabled,
            calc_type,
            schedule_type,
            period: None,
            tag_matchers: None,
        }
    }
}

