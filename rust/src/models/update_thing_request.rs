/*
 * IIoT OpenAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateThingRequest {
    #[serde(rename = "thing_name", skip_serializing_if = "Option::is_none")]
    pub thing_name: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<std::collections::HashMap<String, models::PropertyValue>>,
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<models::ReferenceConfDetails>,
    #[serde(rename = "components", skip_serializing_if = "Option::is_none")]
    pub components: Option<models::ComponentReferenceConfDetails>,
    #[serde(rename = "create_time", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<String>,
    #[serde(rename = "update_time", skip_serializing_if = "Option::is_none")]
    pub update_time: Option<String>,
}

impl UpdateThingRequest {
    pub fn new() -> UpdateThingRequest {
        UpdateThingRequest {
            thing_name: None,
            tags: None,
            properties: None,
            components: None,
            create_time: None,
            update_time: None,
        }
    }
}

